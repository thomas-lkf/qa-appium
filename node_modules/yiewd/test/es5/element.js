/*global describe:true, it:true, before:true, after:true */
"use strict";

var yiewd = require('../../lib/main.js')
  , Express = require('../server/express.js').Express
  , should = require('should')
  , baseUrl = 'http://127.0.0.1:8181/test/'
  , monocle = require('monocle-js')
  , run = monocle.run
  , caps = { browserName: 'chrome' };

describe('yiewd elements', function() {
  // handle running test server
  var server = new Express();
  var driver = null;
  before(function(done) {
    server.start();
    run(wrapGenerator.mark(function $callee() {
      return wrapGenerator(function $callee$($ctx0) {
        while (1) switch ($ctx0.prev = $ctx0.next) {
        case 0:
          driver = yiewd.remote();
          $ctx0.next = 3;
          return driver.init(caps);
        case 3:
          done();
        case 4:
        case "end":
          return $ctx0.stop();
        }
      }, $callee, this);
    }));
  });
  after(function(done) {
    run(wrapGenerator.mark(function $callee() {
      return wrapGenerator(function $callee$($ctx1) {
        while (1) switch ($ctx1.prev = $ctx1.next) {
        case 0:
          $ctx1.next = 2;
          return driver.quit();
        case 2:
          done();
        case 3:
        case "end":
          return $ctx1.stop();
        }
      }, $callee, this);
    }));
  });

  it('should click and get text', function(done) {
    run(wrapGenerator.mark(function $callee() {
      var anchor;

      return wrapGenerator(function $callee$($ctx2) {
        while (1) switch ($ctx2.prev = $ctx2.next) {
        case 0:
          $ctx2.next = 2;
          return driver.get(baseUrl + "guinea-pig.html");
        case 2:
          $ctx2.next = 4;
          return driver.elementByLinkText("i am a link");
        case 4:
          anchor = $ctx2.sent;
          $ctx2.next = 7;
          return anchor.text();
        case 7:
          $ctx2.sent.should.equal("i am a link");
          $ctx2.next = 10;
          return anchor.click();
        case 10:
          $ctx2.next = 12;
          return driver.title();
        case 12:
          $ctx2.sent.should.equal("I am another page title");
          done();
        case 14:
        case "end":
          return $ctx2.stop();
        }
      }, $callee, this);
    }));
  });

  it('should work getting els from els', function(done) {
    run(wrapGenerator.mark(function $callee() {
      var div, anchor, input, text;

      return wrapGenerator(function $callee$($ctx3) {
        while (1) switch ($ctx3.prev = $ctx3.next) {
        case 0:
          $ctx3.next = 2;
          return driver.back();
        case 2:
          $ctx3.next = 4;
          return driver.elementById('the_forms_id');
        case 4:
          div = $ctx3.sent;
          $ctx3.next = 7;
          return div.elementByTagName('p');
        case 7:
          anchor = $ctx3.sent;
          $ctx3.next = 10;
          return anchor.elementByTagName('input');
        case 10:
          input = $ctx3.sent;
          $ctx3.next = 13;
          return input.getAttribute('value');
        case 13:
          text = $ctx3.sent;
          text.should.equal("i has no focus");
          done();
        case 16:
        case "end":
          return $ctx3.stop();
        }
      }, $callee, this);
    }));
  });

  it('should fail when an element is not there', function(done) {
    run(wrapGenerator.mark(function $callee() {
      var e;

      return wrapGenerator(function $callee$($ctx4) {
        while (1) switch ($ctx4.prev = $ctx4.next) {
        case 0:
          $ctx4.prev = 0;
          $ctx4.next = 3;
          return driver.elementById('donotexistman');
        case 3:
          $ctx4.next = 8;
          break;
        case 5:
          $ctx4.prev = 5;
          $ctx4.t0 = $ctx4.catch(0);
          e = $ctx4.t0;
        case 8:
          e.message.should.include("7");
          $ctx4.next = 11;
          return driver.elementByTagName("nowaydude");
        case 11:
        case "end":
          return $ctx4.stop();
        }
      }, $callee, this, [[0, 5]]);
    })).nodeify(function(err) {
      should.exist(err);
      err.message.should.include("NoSuchElement");
      done();
    });
  });

  it('should defer findElement if requested', function(done) {
    run(wrapGenerator.mark(function $callee() {
      var text;

      return wrapGenerator(function $callee$($ctx5) {
        while (1) switch ($ctx5.prev = $ctx5.next) {
        case 0:
          $ctx5.next = 2;
          return driver.get(baseUrl + "guinea-pig.html");
        case 2:
          $ctx5.next = 4;
          return driver.elementByLinkText("i am a link").click();
        case 4:
          $ctx5.next = 6;
          return driver.title();
        case 6:
          $ctx5.sent.should.equal("I am another page title");
          $ctx5.next = 9;
          return driver.back();
        case 9:
          $ctx5.next = 11;

          return driver.elementByTagName('body').elementById('the_forms_id')
            .elementByTagName('input').getValue();
        case 11:
          text = $ctx5.sent;
          text.should.equal("i has no focus");
          done();
        case 14:
        case "end":
          return $ctx5.stop();
        }
      }, $callee, this);
    }));
  });

});

